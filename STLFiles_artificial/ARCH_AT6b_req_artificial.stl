# Automatically generated STL formula
# Model: ARCH_AT6b_artificial
# Requirement: ARCH_AT6b_req_artificial
# Author: Johan Lidén Eddeland

# The following systems have been skipped and logged:

# Parameters
param t_init_ARCH_AT6b_artificial = 0, t_final_ARCH_AT6b_artificial = 30, dt = 0.04, artificial_ARCH_AT6_constant = 30, ARCH_AT6b_rpmThreshold = 3000

##########
# Inport #
##########
# ARCH_AT6b_req_artificial_sub1 := artificial_ARCH_AT6[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# ARCH_AT6b_req_artificial_sub2 := artificial_ARCH_AT6_constant
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# ARCH_AT6b_req_artificial_sub3 := (artificial_ARCH_AT6[t] <= artificial_ARCH_AT6_constant)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

##########
# Inport #
##########
# ARCH_AT6b_req_artificial_sub4 := RPM[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# ARCH_AT6b_req_artificial_sub5 := ARCH_AT6b_rpmThreshold
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# ARCH_AT6b_req_artificial_sub6 := (RPM[t] <= ARCH_AT6b_rpmThreshold)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

# Start of SubSystem (Detect Change) #
	#############
	# UnitDelay #
	#############
	# ARCH_AT6b_req_artificial_sub7 := (RPM[t-1*dt] <= ARCH_AT6b_rpmThreshold)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	1
	# End delay: 	0
	# Type: 		phi_exp

	######################
	# RelationalOperator #
	######################
	# ARCH_AT6b_req_artificial_sub8 := (((RPM[t] <= ARCH_AT6b_rpmThreshold) and not((RPM[t-1*dt] <= ARCH_AT6b_rpmThreshold))) or (not((RPM[t] <= ARCH_AT6b_rpmThreshold)) and (RPM[t-1*dt] <= ARCH_AT6b_rpmThreshold)))
	# Depth: 		2
	# Modal depth: 	0
	# Start delay: 	1
	# End delay: 	0
	# Type: 		phi_exp

# End of SubSystem (Detect Change) #

#########
# Logic #
#########
# ARCH_AT6b_req_artificial_sub9 := ((artificial_ARCH_AT6[t] <= artificial_ARCH_AT6_constant)  or  (((RPM[t] <= ARCH_AT6b_rpmThreshold) and not((RPM[t-1*dt] <= ARCH_AT6b_rpmThreshold))) or (not((RPM[t] <= ARCH_AT6b_rpmThreshold)) and (RPM[t-1*dt] <= ARCH_AT6b_rpmThreshold))))
# Depth: 		3
# Modal depth: 	0
# Start delay: 	1
# End delay: 	0
# Type: 		phi_exp

# =========== SUBREQUIREMENTS ============
# No prerequisites!
# phi_sub1 := ((artificial_ARCH_AT6[t] <= artificial_ARCH_AT6_constant)  or  (((RPM[t] <= ARCH_AT6b_rpmThreshold) and not((RPM[t-1*dt] <= ARCH_AT6b_rpmThreshold))) or (not((RPM[t] <= ARCH_AT6b_rpmThreshold)) and (RPM[t-1*dt] <= ARCH_AT6b_rpmThreshold))))

# =========== FINAL REQUIREMENT ===========
# phi_implies is the formula when interpreting switches using "=>"
# phi_implies := ((artificial_ARCH_AT6[t] <= artificial_ARCH_AT6_constant)  or  (((RPM[t] <= ARCH_AT6b_rpmThreshold) and not((RPM[t-1*dt] <= ARCH_AT6b_rpmThreshold))) or (not((RPM[t] <= ARCH_AT6b_rpmThreshold)) and (RPM[t-1*dt] <= ARCH_AT6b_rpmThreshold))))

phi_ARCH_AT6b_req_artificial := ((artificial_ARCH_AT6[t] <= artificial_ARCH_AT6_constant)  or  (((RPM[t] <= ARCH_AT6b_rpmThreshold) and not((RPM[t-1*dt] <= ARCH_AT6b_rpmThreshold))) or (not((RPM[t] <= ARCH_AT6b_rpmThreshold)) and (RPM[t-1*dt] <= ARCH_AT6b_rpmThreshold))))

