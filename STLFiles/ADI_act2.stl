# Automatically generated STL formula
# Model: ADI
# Requirement: ADI_act2
# Author: Johan Lidï¿½n Eddeland

# The following systems have been skipped and logged:

# Parameters
param t_init_ADI = 0, t_final_ADI = 10, dt = 0.04, fixedStepSize = 0.04, ADI_notAlways1Horizon = 0.2, ADI_subsystem3_downThreshold = 20, ADI_subsystem3_upThreshold = 50, ADI_subsystem3_gear = 1, ADI_subsystem3_gearSelectionState = 2, ADI_subsystem3_RPM = 500, ADI_subsystem3_impellerTorque = 200, ADI_subsystem4_notAlways1Horizon = 2.8, ADI_subsystem4_gear = 4, ADI_subsystem4_downThreshold = 80, ADI_subsystem4_RPM = 4000, ADI_subsystem4_throttle = 70, ADI_subsystem4_gearSelectionState = 3, ADI_subsystem4_upThreshold = 100, ADI_subsystem4_notAlwaysHorizon = 2, ADI_outputTorqueBound = 200, ADI_subsystem1_gearOption1 = 1, ADI_subsystem1_downThreshold1 = 0, ADI_subsystem1_downThreshold2 = 5, ADI_subsystem1_downThreshold4 = 35, ADI_subsystem1_downThreshold3 = 20, ADI_subsystem1_gearOption2 = 3, ADI_subsystem1_evChangesDuration = 0.1, ADI_subsystem1_speedThreshold = 50

############
# Constant #
############
# ADI_act2_sub1 := fixedStepSize
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# ADI_act2_sub2 := ADI_notAlways1Horizon
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

##########
# Inport #
##########
# ADI_act2_sub3 := downThreshold[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

##########
# Inport #
##########
# ADI_act2_sub4 := upThreshold[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

##########
# Inport #
##########
# ADI_act2_sub5 := gear[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

##########
# Inport #
##########
# ADI_act2_sub6 := gearSelectionState[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

##########
# Inport #
##########
# ADI_act2_sub7 := RPM[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

##########
# Inport #
##########
# ADI_act2_sub8 := impellerTorque[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

# Start of SubSystem (subsystem3) #
	############
	# Constant #
	############
	# ADI_act2_sub9 := ADI_subsystem3_downThreshold
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub10 := (downThreshold[t] == ADI_subsystem3_downThreshold)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub11 := ADI_subsystem3_upThreshold
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub12 := (upThreshold[t] <= ADI_subsystem3_upThreshold)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub13 := ((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))
	# Depth: 		2
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub14 := ADI_subsystem3_gear
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub15 := (gear[t] == ADI_subsystem3_gear)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub16 := ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear))
	# Depth: 		2
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub17 := ADI_subsystem3_gearSelectionState
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub18 := (gearSelectionState[t] == ADI_subsystem3_gearSelectionState)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub19 := ((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))
	# Depth: 		3
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub20 := ADI_subsystem3_RPM
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub21 := (RPM[t] >= ADI_subsystem3_RPM)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub22 := ADI_subsystem3_impellerTorque
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub23 := (impellerTorque[t] > ADI_subsystem3_impellerTorque)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub24 := ((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque))
	# Depth: 		4
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

# End of SubSystem (subsystem3) #

##########
# Inport #
##########
# ADI_act2_sub25 := throttle[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

# Start of SubSystem (subsystem4) #
	############
	# Constant #
	############
	# ADI_act2_sub26 := fixedStepSize
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	############
	# Constant #
	############
	# ADI_act2_sub27 := ADI_subsystem4_notAlways1Horizon
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	############
	# Constant #
	############
	# ADI_act2_sub28 := ADI_subsystem4_gear
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub29 := (gear[t] == ADI_subsystem4_gear)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub30 := ADI_subsystem4_downThreshold
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub31 := (downThreshold[t] >= ADI_subsystem4_downThreshold)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub32 := ((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))
	# Depth: 		2
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub33 := ADI_subsystem4_RPM
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub34 := (RPM[t] > ADI_subsystem4_RPM)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub35 := ADI_subsystem4_throttle
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub36 := (throttle[t] > ADI_subsystem4_throttle)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub37 := ADI_subsystem4_gearSelectionState
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub38 := not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub39 := ADI_subsystem4_upThreshold
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub40 := (upThreshold[t] > ADI_subsystem4_upThreshold)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub41 := (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold))
	# Depth: 		2
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub42 := fixedStepSize
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	############
	# Constant #
	############
	# ADI_act2_sub43 := ADI_subsystem4_notAlwaysHorizon
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub44 := not((upThreshold[t] > ADI_subsystem4_upThreshold))
	# Depth: 		2
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub45 := (not((upThreshold[t] > ADI_subsystem4_upThreshold))  and  ((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold)))
	# Depth: 		3
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#############
	# UnitDelay #
	#############
	# ADI_act2_sub46 := (not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold)))
	# Depth: 		3
	# Modal depth: 	0
	# Start delay: 	1
	# End delay: 	0
	# Type: 		phi_exp

	#############
	# SubSystem #
	#############
	# ADI_act2_sub47 := (not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))
	# Depth: 		5
	# Modal depth: 	1
	# Start delay: 	51
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub48 := not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold)))))))
	# Depth: 		6
	# Modal depth: 	1
	# Start delay: 	51
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub49 := ((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))
	# Depth: 		7
	# Modal depth: 	1
	# Start delay: 	51
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub50 := (((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))  and  ((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold)))))))))
	# Depth: 		8
	# Modal depth: 	1
	# Start delay: 	51
	# End delay: 	0
	# Type: 		phi_exp

	#############
	# SubSystem #
	#############
	# ADI_act2_sub51 := (not(hist_[0, 70*dt]((((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))  and  ((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))))))
	# Depth: 		10
	# Modal depth: 	2
	# Start delay: 	121
	# End delay: 	0
	# Type: 		phi_exp

# Start of SubSystem (Detect Increase) #
		#############
		# UnitDelay #
		#############
		# ADI_act2_sub52 := ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))
		# Depth: 		2
		# Modal depth: 	0
		# Start delay: 	1
		# End delay: 	0
		# Type: 		phi_exp

		######################
		# RelationalOperator #
		######################
		# ADI_act2_sub53 := (((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))  and not( ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))
		# Depth: 		3
		# Modal depth: 	0
		# Start delay: 	1
		# End delay: 	0
		# Type: 		phi_exp

# End of SubSystem (Detect Increase) #

	############
	# Constant #
	############
	# ADI_act2_sub54 := 0
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	#############
	# SubSystem #
	#############
	# ADI_act2_sub55 := (not(0) and once_[0, 10]((((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))  and not( ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))
	# Depth: 		5
	# Modal depth: 	1
	# Start delay: 	1
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub56 := ((not(0) and once_[0, 10]((((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))  and not( ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))  and  ((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold)))))))))
	# Depth: 		8
	# Modal depth: 	1
	# Start delay: 	51
	# End delay: 	0
	# Type: 		phi_exp

# Start of SubSystem (Detect Increase) #
		#############
		# UnitDelay #
		#############
		# ADI_act2_sub57 := ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))
		# Depth: 		2
		# Modal depth: 	0
		# Start delay: 	1
		# End delay: 	0
		# Type: 		phi_exp

		######################
		# RelationalOperator #
		######################
		# ADI_act2_sub58 := (((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))  and not( ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))
		# Depth: 		3
		# Modal depth: 	0
		# Start delay: 	1
		# End delay: 	0
		# Type: 		phi_exp

# End of SubSystem (Detect Increase) #

	#############
	# SubSystem #
	#############
	# ADI_act2_sub59 := (not((((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))  and not( ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))) and (((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold)))))))) or UnitDelay1_1[t]))
	# Depth: 		9
	# Modal depth: 	1
	# Start delay: 	51
	# End delay: 	0
	# Type: 		phi_exp

# Start of SubSystem (Detect Decrease) #
		#############
		# UnitDelay #
		#############
		# ADI_act2_sub60 := ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))
		# Depth: 		2
		# Modal depth: 	0
		# Start delay: 	1
		# End delay: 	0
		# Type: 		phi_exp

		######################
		# RelationalOperator #
		######################
		# ADI_act2_sub61 := (not(((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold)) ) and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold)))
		# Depth: 		3
		# Modal depth: 	0
		# Start delay: 	1
		# End delay: 	0
		# Type: 		phi_exp

# End of SubSystem (Detect Decrease) #

	#############
	# SubSystem #
	#############
	# ADI_act2_sub62 := (not((((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))  and not( ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))) and ((not(((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold)) ) and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))) or UnitDelay1_2[t]))
	# Depth: 		5
	# Modal depth: 	0
	# Start delay: 	1
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub63 := 1
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	##########
	# Switch #
	##########
	# ADI_act2_sub64 := ((not((((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))  and not( ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))) and ((not(((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold)) ) and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))) or UnitDelay1_2[t])) and (not((((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))  and not( ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))) and (((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold)))))))) or UnitDelay1_1[t]))) or(not((not((((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold))  and not( ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))) and ((not(((gear[t] == ADI_subsystem4_gear)  or  (downThreshold[t] >= ADI_subsystem4_downThreshold)) ) and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))) or UnitDelay1_2[t]))) and 1)
	# Depth: 		11
	# Modal depth: 	1
	# Start delay: 	51
	# End delay: 	0
	# Type: 		phi_exp

# End of SubSystem (subsystem4) #

#############
# SubSystem #
#############
# ADI_act2_sub65 := (not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))
# Depth: 		9
# Modal depth: 	1
# Start delay: 	51
# End delay: 	0
# Type: 		phi_exp

##########
# Inport #
##########
# ADI_act2_sub66 := outputTorque[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

#######
# Abs #
#######
# ADI_act2_sub67 := abs(outputTorque[t])
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# ADI_act2_sub68 := ADI_outputTorqueBound
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# ADI_act2_sub69 := (abs(outputTorque[t]) <= ADI_outputTorqueBound)
# Depth: 		2
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

#########
# Logic #
#########
# ADI_act2_sub70 := ((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))
# Depth: 		10
# Modal depth: 	0
# Start delay: 	51
# End delay: 	0
# Type: 		phi_exp

#############
# SubSystem #
#############
# ADI_act2_sub71 := (not(hist_[0, 5*dt](((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound)))))
# Depth: 		12
# Modal depth: 	1
# Start delay: 	56
# End delay: 	0
# Type: 		phi_exp

#########
# Logic #
#########
# ADI_act2_sub72 := not((not(hist_[0, 5*dt](((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))))))
# Depth: 		13
# Modal depth: 	1
# Start delay: 	56
# End delay: 	0
# Type: 		phi_exp

##########
# Inport #
##########
# ADI_act2_sub73 := speed[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

# Start of SubSystem (subsystem1) #
	############
	# Constant #
	############
	# ADI_act2_sub74 := ADI_subsystem1_gearOption1
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub75 := (gear[t] == ADI_subsystem1_gearOption1)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub76 := ADI_subsystem1_downThreshold1
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub77 := (downThreshold[t] == ADI_subsystem1_downThreshold1)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub78 := ADI_subsystem1_downThreshold2
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub79 := (downThreshold[t] == ADI_subsystem1_downThreshold2)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub80 := ((downThreshold[t] == ADI_subsystem1_downThreshold1)  or  (downThreshold[t] == ADI_subsystem1_downThreshold2))
	# Depth: 		2
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub81 := ((gear[t] == ADI_subsystem1_gearOption1)  and  ((downThreshold[t] == ADI_subsystem1_downThreshold1)  or  (downThreshold[t] == ADI_subsystem1_downThreshold2)))
	# Depth: 		3
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub82 := ADI_subsystem1_downThreshold4
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub83 := (downThreshold[t] == ADI_subsystem1_downThreshold4)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub84 := ADI_subsystem1_downThreshold3
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub85 := (downThreshold[t] == ADI_subsystem1_downThreshold3)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub86 := ADI_subsystem1_gearOption2
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub87 := (gear[t] == ADI_subsystem1_gearOption2)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# ADI_act2_sub88 := ADI_subsystem1_evChangesDuration
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	############
	# Constant #
	############
	# ADI_act2_sub89 := fixedStepSize
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

# Start of SubSystem (Detect Increase) #
		#############
		# UnitDelay #
		#############
		# ADI_act2_sub90 := (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)
		# Depth: 		1
		# Modal depth: 	0
		# Start delay: 	1
		# End delay: 	0
		# Type: 		phi_exp

		######################
		# RelationalOperator #
		######################
		# ADI_act2_sub91 := ((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))
		# Depth: 		2
		# Modal depth: 	0
		# Start delay: 	1
		# End delay: 	0
		# Type: 		phi_exp

# End of SubSystem (Detect Increase) #

	#############
	# SubSystem #
	#############
	# ADI_act2_sub92 := (once_[0, 2*dt]((((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3))) and not(((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))) or (not(((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))) and ((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))))
	# Depth: 		4
	# Modal depth: 	1
	# Start delay: 	3
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub93 := ((gear[t] == ADI_subsystem1_gearOption2)  or  (once_[0, 2*dt]((((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3))) and not(((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))) or (not(((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))) and ((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3)))))))
	# Depth: 		5
	# Modal depth: 	1
	# Start delay: 	3
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub94 := ((downThreshold[t] == ADI_subsystem1_downThreshold3)  and  ((gear[t] == ADI_subsystem1_gearOption2)  or  (once_[0, 2*dt]((((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3))) and not(((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))) or (not(((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))) and ((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))))))
	# Depth: 		6
	# Modal depth: 	1
	# Start delay: 	3
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub95 := ((((gear[t] == ADI_subsystem1_gearOption1)  and  ((downThreshold[t] == ADI_subsystem1_downThreshold1)  or  (downThreshold[t] == ADI_subsystem1_downThreshold2)))  or  (downThreshold[t] == ADI_subsystem1_downThreshold4))  or  ((downThreshold[t] == ADI_subsystem1_downThreshold3)  and  ((gear[t] == ADI_subsystem1_gearOption2)  or  (once_[0, 2*dt]((((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3))) and not(((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))) or (not(((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))) and ((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3)))))))))
	# Depth: 		7
	# Modal depth: 	1
	# Start delay: 	3
	# End delay: 	0
	# Type: 		phi_exp

	#######
	# Abs #
	#######
	# ADI_act2_sub96 := abs(speed[t])
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	############
	# Constant #
	############
	# ADI_act2_sub97 := ADI_subsystem1_speedThreshold
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# ADI_act2_sub98 := (abs(speed[t]) <= ADI_subsystem1_speedThreshold)
	# Depth: 		2
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# ADI_act2_sub99 := (((((gear[t] == ADI_subsystem1_gearOption1)  and  ((downThreshold[t] == ADI_subsystem1_downThreshold1)  or  (downThreshold[t] == ADI_subsystem1_downThreshold2)))  or  (downThreshold[t] == ADI_subsystem1_downThreshold4))  or  ((downThreshold[t] == ADI_subsystem1_downThreshold3)  and  ((gear[t] == ADI_subsystem1_gearOption2)  or  (once_[0, 2*dt]((((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3))) and not(((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))) or (not(((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))) and ((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3)))))))))  and  (abs(speed[t]) <= ADI_subsystem1_speedThreshold))
	# Depth: 		8
	# Modal depth: 	0
	# Start delay: 	3
	# End delay: 	0
	# Type: 		phi_exp

# End of SubSystem (subsystem1) #

#########
# Logic #
#########
# ADI_act2_sub100 := (((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))  and  (((((gear[t] == ADI_subsystem1_gearOption1)  and  ((downThreshold[t] == ADI_subsystem1_downThreshold1)  or  (downThreshold[t] == ADI_subsystem1_downThreshold2)))  or  (downThreshold[t] == ADI_subsystem1_downThreshold4))  or  ((downThreshold[t] == ADI_subsystem1_downThreshold3)  and  ((gear[t] == ADI_subsystem1_gearOption2)  or  (once_[0, 2*dt]((((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3))) and not(((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))) or (not(((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))) and ((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3)))))))))  and  (abs(speed[t]) <= ADI_subsystem1_speedThreshold)))
# Depth: 		11
# Modal depth: 	0
# Start delay: 	51
# End delay: 	0
# Type: 		phi_exp

############
# Constant #
############
# ADI_act2_sub101 := 0
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

#############
# SubSystem #
#############
# ADI_act2_sub102 := (not(0) and once_[0, 10]((((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))  and  (((((gear[t] == ADI_subsystem1_gearOption1)  and  ((downThreshold[t] == ADI_subsystem1_downThreshold1)  or  (downThreshold[t] == ADI_subsystem1_downThreshold2)))  or  (downThreshold[t] == ADI_subsystem1_downThreshold4))  or  ((downThreshold[t] == ADI_subsystem1_downThreshold3)  and  ((gear[t] == ADI_subsystem1_gearOption2)  or  (once_[0, 2*dt]((((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3))) and not(((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))) or (not(((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))) and ((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3)))))))))  and  (abs(speed[t]) <= ADI_subsystem1_speedThreshold)))))
# Depth: 		13
# Modal depth: 	1
# Start delay: 	51
# End delay: 	0
# Type: 		phi_exp

#########
# Logic #
#########
# ADI_act2_sub103 := (not((not(hist_[0, 5*dt](((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))))))  and  (not(0) and once_[0, 10]((((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))  and  (((((gear[t] == ADI_subsystem1_gearOption1)  and  ((downThreshold[t] == ADI_subsystem1_downThreshold1)  or  (downThreshold[t] == ADI_subsystem1_downThreshold2)))  or  (downThreshold[t] == ADI_subsystem1_downThreshold4))  or  ((downThreshold[t] == ADI_subsystem1_downThreshold3)  and  ((gear[t] == ADI_subsystem1_gearOption2)  or  (once_[0, 2*dt]((((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3))) and not(((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))) or (not(((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))) and ((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3)))))))))  and  (abs(speed[t]) <= ADI_subsystem1_speedThreshold))))))
# Depth: 		14
# Modal depth: 	1
# Start delay: 	56
# End delay: 	0
# Type: 		phi_exp

# =========== SUBREQUIREMENTS ============
# No prerequisites!
# phi_sub1 := (not((not(hist_[0, 5*dt](((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))))))  and  (not(0) and once_[0, 10]((((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))  and  (((((gear[t] == ADI_subsystem1_gearOption1)  and  ((downThreshold[t] == ADI_subsystem1_downThreshold1)  or  (downThreshold[t] == ADI_subsystem1_downThreshold2)))  or  (downThreshold[t] == ADI_subsystem1_downThreshold4))  or  ((downThreshold[t] == ADI_subsystem1_downThreshold3)  and  ((gear[t] == ADI_subsystem1_gearOption2)  or  (once_[0, 2*dt]((((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3))) and not(((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))) or (not(((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))) and ((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3)))))))))  and  (abs(speed[t]) <= ADI_subsystem1_speedThreshold))))))

# =========== FINAL REQUIREMENT ===========
# phi_implies is the formula when interpreting switches using "=>"
# phi_implies := (not((not(hist_[0, 5*dt](((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))))))  and  (not(0) and once_[0, 10]((((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))  and  (((((gear[t] == ADI_subsystem1_gearOption1)  and  ((downThreshold[t] == ADI_subsystem1_downThreshold1)  or  (downThreshold[t] == ADI_subsystem1_downThreshold2)))  or  (downThreshold[t] == ADI_subsystem1_downThreshold4))  or  ((downThreshold[t] == ADI_subsystem1_downThreshold3)  and  ((gear[t] == ADI_subsystem1_gearOption2)  or  (once_[0, 2*dt]((((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3))) and not(((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))) or (not(((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))) and ((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3)))))))))  and  (abs(speed[t]) <= ADI_subsystem1_speedThreshold))))))

phi_ADI_act2 := alw_[t_init_ADI + 56*dt,t_final_ADI](not((not((not(hist_[0, 5*dt](((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))))))  and  (not(0) and once_[0, 10]((((not(((((RPM[t] > ADI_subsystem4_RPM)  or  (throttle[t] > ADI_subsystem4_throttle))  or  (not(gearSelectionState[t] == ADI_subsystem4_gearSelectionState)  and  (upThreshold[t] > ADI_subsystem4_upThreshold)))  or  not((not(hist_[0, 50*dt]((not((upThreshold[t-1*dt] > ADI_subsystem4_upThreshold))  and  ((gear[t-1*dt] == ADI_subsystem4_gear)  or  (downThreshold[t-1*dt] >= ADI_subsystem4_downThreshold))))))))) and (((((((downThreshold[t] == ADI_subsystem3_downThreshold)  and  (upThreshold[t] <= ADI_subsystem3_upThreshold))  or  ((upThreshold[t] <= ADI_subsystem3_upThreshold)  and  (gear[t] == ADI_subsystem3_gear)))  or  (gearSelectionState[t] == ADI_subsystem3_gearSelectionState))  and  (RPM[t] >= ADI_subsystem3_RPM))  and  (impellerTorque[t] > ADI_subsystem3_impellerTorque)) or UnitDelay1_3[t]))  and  (abs(outputTorque[t]) <= ADI_outputTorqueBound))  and  (((((gear[t] == ADI_subsystem1_gearOption1)  and  ((downThreshold[t] == ADI_subsystem1_downThreshold1)  or  (downThreshold[t] == ADI_subsystem1_downThreshold2)))  or  (downThreshold[t] == ADI_subsystem1_downThreshold4))  or  ((downThreshold[t] == ADI_subsystem1_downThreshold3)  and  ((gear[t] == ADI_subsystem1_gearOption2)  or  (once_[0, 2*dt]((((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3))) and not(((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3))))) or (not(((downThreshold[t] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)))) and ((downThreshold[t-1*dt] == ADI_subsystem1_downThreshold3)  and not( (downThreshold[t-2*dt] == ADI_subsystem1_downThreshold3)))))))))  and  (abs(speed[t]) <= ADI_subsystem1_speedThreshold))))))))

