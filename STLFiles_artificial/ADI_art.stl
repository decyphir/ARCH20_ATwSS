# Automatically generated STL formula
# Model: ADI_art
# Requirement: ADI_art
# Author: Johan Lidén Eddeland

# The following systems have been skipped and logged:

# Parameters
param t_init_ADI_art = 0, t_final_ADI_art = 30, dt = 0.04, artificial_ADI_constant = 10, artificial_ADI_BTL_constant = 10, artificial_ADI_time = 10

##########
# Inport #
##########
# ADI_art_sub1 := artificial_ADI[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# ADI_art_sub2 := artificial_ADI_constant
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# ADI_art_sub3 := (artificial_ADI[t] >= artificial_ADI_constant)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

##########
# Inport #
##########
# ADI_art_sub4 := artificial_ADI_BTL[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# ADI_art_sub5 := artificial_ADI_BTL_constant
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# ADI_art_sub6 := (artificial_ADI_BTL[t] >= artificial_ADI_BTL_constant)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

#########
# Logic #
#########
# ADI_art_sub7 := ((artificial_ADI[t] >= artificial_ADI_constant)  or  (artificial_ADI_BTL[t] >= artificial_ADI_BTL_constant))
# Depth: 		2
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

############
# Constant #
############
# ADI_art_sub8 := 0
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# ADI_art_sub9 := artificial_ADI_time
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

#############
# SubSystem #
#############
# ADI_art_sub10 := (alw_[0, 10](((artificial_ADI[t] >= artificial_ADI_constant)  or  (artificial_ADI_BTL[t] >= artificial_ADI_BTL_constant))))
# Depth: 		3
# Modal depth: 	1
# Start delay: 	10
# End delay: 	0
# Type: 		phi_exp

# =========== SUBREQUIREMENTS ============
# No prerequisites!
# phi_sub1 := (alw_[0, 10](((artificial_ADI[t] >= artificial_ADI_constant)  or  (artificial_ADI_BTL[t] >= artificial_ADI_BTL_constant))))

# =========== FINAL REQUIREMENT ===========
# phi_implies is the formula when interpreting switches using "=>"
# phi_implies := (alw_[0, 10](((artificial_ADI[t] >= artificial_ADI_constant)  or  (artificial_ADI_BTL[t] >= artificial_ADI_BTL_constant))))

phi_ADI_art := (alw_[0, 10](((artificial_ADI[t] >= artificial_ADI_constant)  or  (artificial_ADI_BTL[t] >= artificial_ADI_BTL_constant))))

