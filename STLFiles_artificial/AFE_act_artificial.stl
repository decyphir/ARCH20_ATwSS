# Automatically generated STL formula
# Model: AFE_artificial
# Requirement: AFE_act_artificial
# Author: Johan Lidén Eddeland

# The following systems have been skipped and logged:

# Parameters
param t_init_AFE_artificial = 0, t_final_AFE_artificial = 30, dt = 0.04, artificial_AFE_RFC_constant = 30, artificial_AOT_AFE_constant = 30, AFE_speedMin = 50, AFE_downThreshold = 27, AFE_subsystem1_gear = 3, AFE_subsystem1_gearSelectionState = 1, AFE_subsystem1_upThreshold1 = 40, AFE_subsystem1_upThreshold2 = 60, fixedStepSize = 0.04, AFE_subsystem1_notAlwaysTimeHorizon = 0.1, AFE_subsystem1_downThreshold = 20

##########
# Inport #
##########
# AFE_act_artificial_sub1 := artificial_AFE_RFC[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# AFE_act_artificial_sub2 := artificial_AFE_RFC_constant
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# AFE_act_artificial_sub3 := (artificial_AFE_RFC[t] <= artificial_AFE_RFC_constant)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

##########
# Inport #
##########
# AFE_act_artificial_sub4 := artificial_AOT_AFE[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# AFE_act_artificial_sub5 := artificial_AOT_AFE_constant
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# AFE_act_artificial_sub6 := (artificial_AOT_AFE[t] <= artificial_AOT_AFE_constant)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

#########
# Logic #
#########
# AFE_act_artificial_sub7 := ((artificial_AFE_RFC[t] <= artificial_AFE_RFC_constant)  and  (artificial_AOT_AFE[t] <= artificial_AOT_AFE_constant))
# Depth: 		2
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

##########
# Inport #
##########
# AFE_act_artificial_sub8 := speed[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# AFE_act_artificial_sub9 := AFE_speedMin
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# AFE_act_artificial_sub10 := (speed[t] >= AFE_speedMin)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

##########
# Inport #
##########
# AFE_act_artificial_sub11 := downThreshold[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# AFE_act_artificial_sub12 := AFE_downThreshold
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# AFE_act_artificial_sub13 := (downThreshold[t] >= AFE_downThreshold)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

##########
# Inport #
##########
# AFE_act_artificial_sub14 := gear[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

##########
# Inport #
##########
# AFE_act_artificial_sub15 := gearSelectionState[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

##########
# Inport #
##########
# AFE_act_artificial_sub16 := upThreshold[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

# Start of SubSystem (subsystem1) #
	############
	# Constant #
	############
	# AFE_act_artificial_sub17 := 1
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	############
	# Constant #
	############
	# AFE_act_artificial_sub18 := AFE_subsystem1_gear
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# AFE_act_artificial_sub19 := (gear[t] == AFE_subsystem1_gear)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# AFE_act_artificial_sub20 := AFE_subsystem1_gearSelectionState
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# AFE_act_artificial_sub21 := (gearSelectionState[t] == AFE_subsystem1_gearSelectionState)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# AFE_act_artificial_sub22 := AFE_subsystem1_upThreshold1
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# AFE_act_artificial_sub23 := (upThreshold[t] >= AFE_subsystem1_upThreshold1)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# AFE_act_artificial_sub24 := AFE_subsystem1_upThreshold2
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# AFE_act_artificial_sub25 := (upThreshold[t] <= AFE_subsystem1_upThreshold2)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# AFE_act_artificial_sub26 := ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2))
	# Depth: 		2
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# AFE_act_artificial_sub27 := (((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2)))
	# Depth: 		3
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# AFE_act_artificial_sub28 := not((((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2))))
	# Depth: 		4
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# AFE_act_artificial_sub29 := fixedStepSize
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	############
	# Constant #
	############
	# AFE_act_artificial_sub30 := AFE_subsystem1_notAlwaysTimeHorizon
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	#############
	# SubSystem #
	#############
	# AFE_act_artificial_sub31 := (not(hist_[0, 2*dt]((((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2))))))
	# Depth: 		5
	# Modal depth: 	1
	# Start delay: 	2
	# End delay: 	0
	# Type: 		phi_exp

	############
	# Constant #
	############
	# AFE_act_artificial_sub32 := AFE_subsystem1_downThreshold
	# Depth: 		0
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		signal_exp

	######################
	# RelationalOperator #
	######################
	# AFE_act_artificial_sub33 := (downThreshold[t] == AFE_subsystem1_downThreshold)
	# Depth: 		1
	# Modal depth: 	0
	# Start delay: 	0
	# End delay: 	0
	# Type: 		phi_exp

	#########
	# Logic #
	#########
	# AFE_act_artificial_sub34 := ((not(hist_[0, 2*dt]((((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2))))))  or  (downThreshold[t] == AFE_subsystem1_downThreshold))
	# Depth: 		6
	# Modal depth: 	0
	# Start delay: 	2
	# End delay: 	0
	# Type: 		phi_exp

	##########
	# Switch #
	##########
	# AFE_act_artificial_sub35 := (not((((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2)))) and 1) or(not(not((((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2))))) and ((not(hist_[0, 2*dt]((((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2))))))  or  (downThreshold[t] == AFE_subsystem1_downThreshold)))
	# Depth: 		8
	# Modal depth: 	0
	# Start delay: 	2
	# End delay: 	0
	# Type: 		phi_exp

# End of SubSystem (subsystem1) #

#########
# Logic #
#########
# AFE_act_artificial_sub36 := (((speed[t] >= AFE_speedMin)  and  (((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2))))  and  (downThreshold[t] >= AFE_downThreshold))
# Depth: 		4
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

#########
# Logic #
#########
# AFE_act_artificial_sub37 := (((artificial_AFE_RFC[t] <= artificial_AFE_RFC_constant)  and  (artificial_AOT_AFE[t] <= artificial_AOT_AFE_constant))  and  (((speed[t] >= AFE_speedMin)  and  (((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2))))  and  (downThreshold[t] >= AFE_downThreshold)))
# Depth: 		5
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

# =========== SUBREQUIREMENTS ============
# No prerequisites!
# phi_sub1 := (((artificial_AFE_RFC[t] <= artificial_AFE_RFC_constant)  and  (artificial_AOT_AFE[t] <= artificial_AOT_AFE_constant))  and  (((speed[t] >= AFE_speedMin)  and  (((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2))))  and  (downThreshold[t] >= AFE_downThreshold)))

# =========== FINAL REQUIREMENT ===========
# phi_implies is the formula when interpreting switches using "=>"
# phi_implies := (((artificial_AFE_RFC[t] <= artificial_AFE_RFC_constant)  and  (artificial_AOT_AFE[t] <= artificial_AOT_AFE_constant))  and  (((speed[t] >= AFE_speedMin)  and  (((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2))))  and  (downThreshold[t] >= AFE_downThreshold)))

phi_AFE_act_artificial := alw_[t_init_AFE_artificial,t_final_AFE_artificial](not((((artificial_AFE_RFC[t] <= artificial_AFE_RFC_constant)  and  (artificial_AOT_AFE[t] <= artificial_AOT_AFE_constant))  and  (((speed[t] >= AFE_speedMin)  and  (((gear[t] == AFE_subsystem1_gear)  and  (gearSelectionState[t] == AFE_subsystem1_gearSelectionState))  and  ((upThreshold[t] >= AFE_subsystem1_upThreshold1)  and  (upThreshold[t] <= AFE_subsystem1_upThreshold2))))  and  (downThreshold[t] >= AFE_downThreshold)))))

