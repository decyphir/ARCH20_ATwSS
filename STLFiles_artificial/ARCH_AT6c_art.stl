# Automatically generated STL formula
# Model: ARCH_AT6c_art
# Requirement: ARCH_AT6c_art
# Author: Johan Lidén Eddeland

# The following systems have been skipped and logged:

# Parameters
param t_init_ARCH_AT6c_art = 0, t_final_ARCH_AT6c_art = 30, dt = 0.04, artificial_ARCH_AT6_min = 45, artificial_ARCH_AT6_max = 55, artificial_ARCH_AT6c_time = 15

##########
# Inport #
##########
# ARCH_AT6c_art_sub1 := artificial_ARCH_AT6[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# ARCH_AT6c_art_sub2 := artificial_ARCH_AT6_min
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# ARCH_AT6c_art_sub3 := (artificial_ARCH_AT6[t] > artificial_ARCH_AT6_min)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

############
# Constant #
############
# ARCH_AT6c_art_sub4 := artificial_ARCH_AT6_max
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# ARCH_AT6c_art_sub5 := (artificial_ARCH_AT6[t] < artificial_ARCH_AT6_max)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

#########
# Logic #
#########
# ARCH_AT6c_art_sub6 := ((artificial_ARCH_AT6[t] > artificial_ARCH_AT6_min)  and  (artificial_ARCH_AT6[t] < artificial_ARCH_AT6_max))
# Depth: 		2
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

############
# Constant #
############
# ARCH_AT6c_art_sub7 := 0
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# ARCH_AT6c_art_sub8 := artificial_ARCH_AT6c_time
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

#############
# SubSystem #
#############
# ARCH_AT6c_art_sub9 := (alw_[0, artificial_ARCH_AT6c_time](((artificial_ARCH_AT6[t] > artificial_ARCH_AT6_min)  and  (artificial_ARCH_AT6[t] < artificial_ARCH_AT6_max))))
# Depth: 		3
# Modal depth: 	1
# Start delay: 	15
# End delay: 	0
# Type: 		phi_exp

#########
# Logic #
#########
# ARCH_AT6c_art_sub10 := not((alw_[0, artificial_ARCH_AT6c_time](((artificial_ARCH_AT6[t] > artificial_ARCH_AT6_min)  and  (artificial_ARCH_AT6[t] < artificial_ARCH_AT6_max)))))
# Depth: 		4
# Modal depth: 	1
# Start delay: 	15
# End delay: 	0
# Type: 		phi_exp

# =========== SUBREQUIREMENTS ============
# No prerequisites!
# phi_sub1 := not((alw_[0, artificial_ARCH_AT6c_time](((artificial_ARCH_AT6[t] > artificial_ARCH_AT6_min)  and  (artificial_ARCH_AT6[t] < artificial_ARCH_AT6_max)))))

# =========== FINAL REQUIREMENT ===========
# phi_implies is the formula when interpreting switches using "=>"
# phi_implies := not((alw_[0, artificial_ARCH_AT6c_time](((artificial_ARCH_AT6[t] > artificial_ARCH_AT6_min)  and  (artificial_ARCH_AT6[t] < artificial_ARCH_AT6_max)))))

phi_ARCH_AT6c_art := not((alw_[0, artificial_ARCH_AT6c_time](((artificial_ARCH_AT6[t] > artificial_ARCH_AT6_min)  and  (artificial_ARCH_AT6[t] < artificial_ARCH_AT6_max)))))

